// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique  // ¡Importante para autenticación!
  password  String   // Hash de la contraseña
  name      String?  // Nombre completo opcional
  avatar    String?  // URL del avatar
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  accounts     Account[]
  transactions Transaction[]

  @@map("users")
}

model Transaction {
  id          String   @id @default(cuid())
  type        String   // "ingreso" o "gasto"
  amount      Float
  description String?
  date        DateTime @default(now())
  userId      String
  accountId   String?
  categoryId  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt


  // Relaciones
  user User @relation(fields: [userId], references: [id])
  account Account? @relation(fields: [accountId], references: [id])
  category Category? @relation(fields: [categoryId], references: [id])

  @@map("transactions")
}

model Account {
  id        String   @id @default(cuid())
  type      String   // "banco", "efectivo", "tarjeta", etc.
  balance   Float    @default(0)
  userId    String
  transactions Transaction[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  user User @relation(fields: [userId], references: [id])

  @@map("accounts")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  type      String   // "ingreso" o "gasto"
  color     String?  // Color opcional para la categoría
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  transactions Transaction[]

  @@map("categories")
}